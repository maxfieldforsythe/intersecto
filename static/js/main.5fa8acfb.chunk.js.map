{"version":3,"sources":["components/TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","className","App","previous","current","shapeCounter","shape1","shape2","color","notify","message","toast","drawPixel","x","y","ctx","document","getElementById","getContext","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","drawLine","x1","y1","JSON","stringify","length","console","log","initializeCanvas","canvas","width","offsetWidth","height","offsetHeight","useEffect","style","marginTop","background","onClick","jsonShit","axios","post","then","response","data","catch","error","theme","event","yCoord","pageY","target","offsetTop","xCoord","pageX","offsetLeft","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5fa8acfb.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function TopBar() {\n    return (\n        <div className=\"layout-topbar\">\n            INTERSECTO\n\t    </div>\n    )\n}\n","import './App.css';\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport TopBar from './components/TopBar';\n\nfunction App() {\n\n  let previous = []\n  let current = []\n  let shapeCounter = 1\n  let shape1 = []\n  let shape2 = []\n  let color = 'blue'\n\n  const notify = (message) => toast(message);\n  const deny = () => toast(\"Please close all shapes before calculating!\");\n\n  const computeIntersect=()=>{\n    var jsonShit = {\n      'shape1': \n        shape1,\n      'shape2': \n        shape2\n    }\n\n    if(shapeCounter != 3){\n      deny()\n      return\n    }\n    axios.post(`https://flask-container-service.82ruic243qqso.us-east-1.cs.amazonlightsail.com/intersects`, jsonShit).then(response => {\n        if(response.data === 'True'){\n          notify(\"These shapes intersect!\")\n        } else {\n          notify(\"These shapes do not intersect :'(\")\n        }\n        console.log(\"SUCCESS\", response)\n      }).catch(error => {\n        console.log(error)\n      })\n  }\n  \n  const canvasClick=(event)=>{\n    let yCoord = event.pageY - event.target.offsetTop\n    let xCoord = event.pageX - event.target.offsetLeft\n\n    previous = current\n\n    current = [xCoord,yCoord]\n\n    if(shapeCounter < 2){\n      if(shape1.length > 0){\n        if(xCoord < shape1[0][0][0] + 20 && xCoord > shape1[0][0][0] - 20 && yCoord < shape1[0][0][1] + 20 && yCoord > shape1[0][0][1] - 20 ){\n          current = [shape1[0][0][0],shape1[0][0][1]]\n        }\n      }\n    } else {\n      if(shape2.length > 0){\n        if(xCoord < shape2[0][0][0] + 20 && xCoord > shape2[0][0][0] - 20 && yCoord < shape2[0][0][1] + 20 && yCoord > shape2[0][0][1] - 20 ){\n          current = [shape2[0][0][0],shape2[0][0][1]]\n        }\n      }\n    }\n\n    if(shapeCounter < 3){\n      drawPixel(xCoord, yCoord);\n    }\n\n    if(previous.length > 0 && shapeCounter < 3){\n      drawLine(previous[0],current[0],previous[1],current[1])\n    }\n  }\n\n  const drawPixel=(x,y)=>{\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(x,y);\n    ctx.lineTo(x+1, y+1);\n    ctx.stroke();\n  }\n\n  const drawLine=(x,x1,y,y1)=>{\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(x,y);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n    if(shapeCounter < 2){\n      shape1 = [...shape1, [[x,y,0],[x1,y1,0]]]\n      if(JSON.stringify(shape1[shape1.length -1][1]) === JSON.stringify(shape1[0][0])){\n        shapeCounter++\n        previous = []\n        current = []\n        color = 'red'\n      }\n    } else {\n      shape2 = [...shape2, [[x,y,0],[x1,y1,0]]]\n      if(JSON.stringify(shape2[shape2.length -1][1]) === JSON.stringify(shape2[0][0])){\n        shapeCounter++\n        console.log(shape1)\n        console.log(shape2)\n      }\n    }\n  }\n\n  const initializeCanvas=()=> {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = canvas.offsetWidth\n    canvas.height = canvas.offsetHeight\n    previous = []\n    current = []\n    shape1 = []\n    shape2 = []\n    shapeCounter = 1\n    color = 'blue'\n  }\n\n  useEffect(() => {\n    initializeCanvas()\n  });\n\n  return (\n    <div className=\"App\">\n      <TopBar/>\n      <div className=\"layout-sidebar\">\n        <div style={{marginTop: '20px', color: '#fff'}}>\n          Menu/Tutorial\n        </div>\n        <div style={{height: '2px', width: '85%', background: '#fff'}}/>\n        <div className=\"sidebar-subtext\">\n          Welcome!<br/>\n          To begin placing shapes click on the canvas to the right. To close a shape click near the starting point. After the first shape is closed you can begin drawing the second one. \n          Feel free to clear the canvas to restart. The calculate button will tell you if they are intersecting.\n        </div>\n        <button className='buttons' onClick={computeIntersect}>\n          Calculate\n        </button>\n        <ToastContainer theme='dark'/>\n        <button className='buttons' onClick={initializeCanvas}>\n          Clear Canvas\n        </button>\n      </div>\n      <div className=\"graph-container\">\n        <div className=\"page\">\n          <div className=\"data-table\" onClick={canvasClick}>\n            <canvas\n              id=\"canvas\"\n              style={{width: '100%', height: '100%'}}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}